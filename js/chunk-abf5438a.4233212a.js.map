{"version":3,"sources":["webpack:///./src/views/Teacher/statisticsCenter/Charts/lineHistogramChart.vue","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/util/shape/sausage.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/chart/bar/install.js","webpack:///./src/views/Teacher/statisticsCenter/Charts/lineHistogramChart.vue?7f98","webpack:///./src/views/Teacher/statisticsCenter/Charts/lineHistogramChart.vue?1a6b","webpack:///./src/views/Teacher/statisticsCenter/Charts/lineHistogramChart.vue?bf60"],"names":["class","ref","_super","BaseBarSeriesModel","_this","apply","this","arguments","type","prototype","getInitialData","option","ecModel","createListFromArray","getSource","useEncodeDefaulter","getMarkerPosition","value","coordSys","coordinateSystem","pt","dataToPoint","clampData","data","getData","offset","getLayout","size","offsetIndex","getBaseAxis","isHorizontal","NaN","defaultOption","zlevel","z","legendHoverLink","barMinHeight","barMinAngle","large","largeThreshold","progressive","progressiveChunkMode","Series","registerClass","BaseBarSeries","BarSeriesModel","createInvertedIndices","get","getProgressive","getProgressiveThreshold","progressiveThreshold","brushSelector","dataIndex","selectors","rect","getItemLayout","dependencies","clip","roundCap","showBackground","backgroundStyle","color","borderColor","borderWidth","borderType","borderRadius","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","opacity","select","itemStyle","realtimeSort","BarSeries","SausageShape","cx","cy","r0","r","startAngle","endAngle","Math","PI","clockwise","SausagePath","opts","call","getDefaultShape","buildPath","ctx","shape","x","y","max","dr","rCenter","unitStartX","cos","unitStartY","sin","unitEndX","unitEndY","lessThanCircle","moveTo","arc","closePath","Path","_eventPos","mathMax","mathMin","min","getClipArea","coord","coordSysClipArea","getArea","baseAxis","onBand","expandWidth","width","height","BarView","_isFirstFrame","render","seriesModel","api","payload","_model","_removeOnRenderedListener","_updateDrawMode","coordinateSystemType","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","_updateLargeClip","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","isHorizontalOrRadial","group","oldData","_data","dim","animationModel","isAnimationEnabled","realtimeSortCfg","shouldRealtimeSort","_enableRealtimeSort","needsClip","removeClipPath","drawBackground","backgroundModel","getModel","barBorderRadius","bgEls","oldBgEls","_backgroundEls","isInitSort","isChangeOrder","createBackground","bgLayout","bgEl","createBackgroundEl","useStyle","getItemStyle","setShape","diff","add","itemModel","getItemModel","layout","hasValue","isClipped","el","elementCreator","model","updateStyle","attr","updateRealtimeAnimation","setItemGraphicEl","ignore","update","newIndex","oldIndex","length","createBackgroundShape","getItemGraphicEl","remove","execute","bgGroup","_backgroundGroup","Group","removeAll","i","createLarge","_removeBackground","clipPath","setClipPath","count","_dispatchInitSort","orderMapping_1","idx","abs","_onRendered","_updateSortWithinSameData","getZr","on","_dataSort","orderMapping","info","each","mapDimension","ordinalNumber","dataIdx","mappedValue","push","sort","a","b","ordinalNumbers","item","_isOrderChangedWithinSameData","scale","ordinalDataDim","lastValue","Number","MAX_VALUE","tickNum","len","getOrdinalMeta","categories","rawIdx","rawIndexOf","getRawOrdinalNumber","MIN_VALUE","indexOfRawIndex","_isOrderDifferentInView","orderInfo","extent","getExtent","tickMax","sortInfo","dispatchAction","componentType","axisId","index","sortResult","otherAxis","animation","duration","dispose","off","eachItemGraphicEl","Chart","cartesian2d","coordSysBoundingRect","signWidth","signHeight","coordSysX2","coordSysY2","x2","y2","xClipped","yClipped","polar","signR","tmp","clipped","axisModel","isUpdate","Rect","z2","__dataIndex","name","rectShape","animateProperty","isRadial","ShapeClass","Sector","sector","sectorShape","animateTarget","realtimeSortOption","getOtherAxis","seriesAnimationModel","seriesTarget","axisTarget","axisAnimationModel","fixedLineWidth","getLineWidth","signX","signY","isZeroOnPolar","isPolar","style","getItemVisual","cursorStyle","getShallow","labelPositionOutside","labelStatesModels","labelFetcher","labelDataIndex","defaultText","inheritColor","fill","defaultOpacity","defaultOutsidePosition","label","getTextContent","getRawValue","emphasisModel","stroke","states","state","rawLayout","lineWidth","isNaN","LagePathShape","LargePath","points","startPoint","__startPoint","baseDimIdx","__baseDimIdx","lineTo","incremental","largeDataIndices","barWidth","backgroundStartPoint","silent","__largeDataIndices","__barWidth","setLargeBackgroundStyle","setLargeStyle","seriesIndex","largePathUpdateDataIndex","throttle","event","largePath","largePathFindDataIndex","offsetX","offsetY","valueDimIdx","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","ii","barBaseVal","barValueVal","globalStyle","getVisual","coordLayout","ElementClz","registers","registerChartView","registerSeriesModel","registerLayout","PRIORITY","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","registerProcessor","PROCESSOR","STATISTIC","dataSample","registerAction","eachComponent","mainType","query","componentModel","axis","setCategorySortInfo","props","EchartsData","Object","default","setup","container","chart","tooltip","trigger","axisPointer","crossStyle","toolbox","feature","dataView","show","readOnly","magicType","restore","saveAsImage","legend","xAxis","yAxis","interval","axisLabel","formatter","series","yAxisIndex","setChart","forEach","data1","data2","data3","echarts","setOption","newValue","oldValue","__scopeId"],"mappings":"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","file":"js/chunk-abf5438a.4233212a.js","sourcesContent":["<div class=\"content\"><div class=\"chr\" ref=\"container\"></div></div>","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series';\nimport createListFromArray from '../helper/createListFromArray';\n\nvar BaseBarSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(BaseBarSeriesModel, _super);\n\n  function BaseBarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BaseBarSeriesModel.type;\n    return _this;\n  }\n\n  BaseBarSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      useEncodeDefaulter: true\n    });\n  };\n\n  BaseBarSeriesModel.prototype.getMarkerPosition = function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  };\n\n  BaseBarSeriesModel.type = 'series.__base_bar__';\n  BaseBarSeriesModel.defaultOption = {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    barMinHeight: 0,\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 3e3,\n    progressiveChunkMode: 'mod'\n  };\n  return BaseBarSeriesModel;\n}(SeriesModel);\n\nSeriesModel.registerClass(BaseBarSeriesModel);\nexport default BaseBarSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseBarSeriesModel from './BaseBarSeries';\nimport createListFromArray from '../helper/createListFromArray';\nimport { inheritDefaultOption } from '../../util/component';\n\nvar BarSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(BarSeriesModel, _super);\n\n  function BarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BarSeriesModel.type;\n    return _this;\n  }\n\n  BarSeriesModel.prototype.getInitialData = function () {\n    return createListFromArray(this.getSource(), this, {\n      useEncodeDefaulter: true,\n      createInvertedIndices: !!this.get('realtimeSort', true) || null\n    });\n  };\n  /**\n   * @override\n   */\n\n\n  BarSeriesModel.prototype.getProgressive = function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  };\n  /**\n   * @override\n   */\n\n\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  };\n\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.rect(data.getItemLayout(dataIndex));\n  };\n\n  BarSeriesModel.type = 'series.bar';\n  BarSeriesModel.dependencies = ['grid', 'polar'];\n  BarSeriesModel.defaultOption = inheritDefaultOption(BaseBarSeriesModel.defaultOption, {\n    // If clipped\n    // Only available on cartesian2d\n    clip: true,\n    roundCap: false,\n    showBackground: false,\n    backgroundStyle: {\n      color: 'rgba(180, 180, 180, 0.2)',\n      borderColor: null,\n      borderWidth: 0,\n      borderType: 'solid',\n      borderRadius: 0,\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    realtimeSort: false\n  });\n  return BarSeriesModel;\n}(BaseBarSeriesModel);\n\nexport default BarSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { Path } from '../graphic';\n/**\n * Sausage: similar to sector, but have half circle on both sides\n */\n\nvar SausageShape =\n/** @class */\nfunction () {\n  function SausageShape() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r0 = 0;\n    this.r = 0;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.clockwise = true;\n  }\n\n  return SausageShape;\n}();\n\nvar SausagePath =\n/** @class */\nfunction (_super) {\n  __extends(SausagePath, _super);\n\n  function SausagePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'sausage';\n    return _this;\n  }\n\n  SausagePath.prototype.getDefaultShape = function () {\n    return new SausageShape();\n  };\n\n  SausagePath.prototype.buildPath = function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var dr = (r - r0) * 0.5;\n    var rCenter = r0 + dr;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitStartX = Math.cos(startAngle);\n    var unitStartY = Math.sin(startAngle);\n    var unitEndX = Math.cos(endAngle);\n    var unitEndY = Math.sin(endAngle);\n    var lessThanCircle = clockwise ? endAngle - startAngle < Math.PI * 2 : startAngle - endAngle < Math.PI * 2;\n\n    if (lessThanCircle) {\n      ctx.moveTo(unitStartX * r0 + x, unitStartY * r0 + y);\n      ctx.arc(unitStartX * rCenter + x, unitStartY * rCenter + y, dr, -Math.PI + startAngle, startAngle, !clockwise);\n    }\n\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.moveTo(unitEndX * r + x, unitEndY * r + y);\n    ctx.arc(unitEndX * rCenter + x, unitEndY * rCenter + y, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n      ctx.moveTo(unitStartX * r0 + x, unitEndY * r0 + y);\n    }\n\n    ctx.closePath();\n  };\n\n  return SausagePath;\n}(Path);\n\nexport default SausagePath;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path';\nimport Group from 'zrender/lib/graphic/Group';\nimport { extend, defaults, each, map } from 'zrender/lib/core/util';\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut } from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport { enableHoverEmphasis, setStatesStylesFromModel } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation } from '../../label/labelStyle';\nimport { throttle } from '../../util/throttle';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\nimport Sausage from '../../util/shape/sausage';\nimport ChartView from '../../view/Chart';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nimport { warn } from '../../util/log';\nvar _eventPos = [0, 0];\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView =\n/** @class */\nfunction (_super) {\n  __extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n\n    this._removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel); // incremental also need to clip, otherwise might be overlow.\n    // But must not set clip in each frame, otherwise all of the children will be marked redraw.\n\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var realtimeSortCfg = shouldRealtimeSort(seriesModel, coord);\n\n    if (realtimeSortCfg) {\n      this._enableRealtimeSort(realtimeSortCfg, data, api);\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSortCfg;\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        el = null;\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      } // Not change anything if only order changed.\n      // Especially not change label.\n\n\n      if (!isChangeOrder) {\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    // Use clipPath in large mode.\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._enableRealtimeSort = function (realtimeSortCfg, data, api) {\n    var _this = this; // If no data in the first frame, wait for data to initSort\n\n\n    if (!data.count()) {\n      return;\n    }\n\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    if (this._isFirstFrame) {\n      this._dispatchInitSort(data, realtimeSortCfg, api);\n\n      this._isFirstFrame = false;\n    } else {\n      var orderMapping_1 = function (idx) {\n        var el = data.getItemGraphicEl(idx);\n\n        if (el) {\n          var shape = el.shape; // If data is NaN, shape.xxx may be NaN, so use || 0 here in case\n\n          return (baseAxis.isHorizontal() // The result should be consistent with the initial sort by data value.\n          // Do not support the case that both positive and negative exist.\n          ? Math.abs(shape.height) : Math.abs(shape.width)) || 0;\n        } else {\n          return 0;\n        }\n      };\n\n      this._onRendered = function () {\n        _this._updateSortWithinSameData(data, orderMapping_1, baseAxis, api);\n      };\n\n      api.getZr().on('rendered', this._onRendered);\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, baseAxis, orderMapping) {\n    var info = [];\n    data.each(data.mapDimension(baseAxis.dim), function (ordinalNumber, dataIdx) {\n      var mappedValue = orderMapping(dataIdx);\n      mappedValue = mappedValue == null ? NaN : mappedValue;\n      info.push({\n        dataIndex: dataIdx,\n        mappedValue: mappedValue,\n        ordinalNumber: ordinalNumber\n      });\n    });\n    info.sort(function (a, b) {\n      // If NaN, it will be treated as min val.\n      return b.mappedValue - a.mappedValue;\n    });\n    return {\n      ordinalNumbers: map(info, function (item) {\n        return item.ordinalNumber;\n      })\n    };\n  };\n\n  BarView.prototype._isOrderChangedWithinSameData = function (data, orderMapping, baseAxis) {\n    var scale = baseAxis.scale;\n    var ordinalDataDim = data.mapDimension(baseAxis.dim);\n    var lastValue = Number.MAX_VALUE;\n\n    for (var tickNum = 0, len = scale.getOrdinalMeta().categories.length; tickNum < len; ++tickNum) {\n      var rawIdx = data.rawIndexOf(ordinalDataDim, scale.getRawOrdinalNumber(tickNum));\n      var value = rawIdx < 0 // If some tick have no bar, the tick will be treated as min.\n      ? Number.MIN_VALUE // PENDING: if dataZoom on baseAxis exits, is it a performance issue?\n      : orderMapping(data.indexOfRawIndex(rawIdx));\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n  /*\n   * Consider the case when A and B changed order, whose representing\n   * bars are both out of sight, we don't wish to trigger reorder action\n   * as long as the order in the view doesn't change.\n   */\n\n\n  BarView.prototype._isOrderDifferentInView = function (orderInfo, baseAxis) {\n    var scale = baseAxis.scale;\n    var extent = scale.getExtent();\n    var tickNum = Math.max(0, extent[0]);\n    var tickMax = Math.min(extent[1], scale.getOrdinalMeta().categories.length - 1);\n\n    for (; tickNum <= tickMax; ++tickNum) {\n      if (orderInfo.ordinalNumbers[tickNum] !== scale.getRawOrdinalNumber(tickNum)) {\n        return true;\n      }\n    }\n  };\n\n  BarView.prototype._updateSortWithinSameData = function (data, orderMapping, baseAxis, api) {\n    if (!this._isOrderChangedWithinSameData(data, orderMapping, baseAxis)) {\n      return;\n    }\n\n    var sortInfo = this._dataSort(data, baseAxis, orderMapping);\n\n    if (this._isOrderDifferentInView(sortInfo, baseAxis)) {\n      this._removeOnRenderedListener(api);\n\n      api.dispatchAction({\n        type: 'changeAxisOrder',\n        componentType: baseAxis.dim + 'Axis',\n        axisId: baseAxis.index,\n        sortInfo: sortInfo\n      });\n    }\n  };\n\n  BarView.prototype._dispatchInitSort = function (data, realtimeSortCfg, api) {\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    var sortResult = this._dataSort(data, baseAxis, function (dataIdx) {\n      return data.get(data.mapDimension(realtimeSortCfg.otherAxis.dim), dataIdx);\n    });\n\n    api.dispatchAction({\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: sortResult,\n      animation: {\n        // Update the axis label from the natural initial layout to\n        // sorted layout should has no animation.\n        duration: 0\n      }\n    });\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype._removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(ChartView);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var coordSysX2 = coordSysBoundingRect.x + coordSysBoundingRect.width;\n    var coordSysY2 = coordSysBoundingRect.y + coordSysBoundingRect.height;\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysX2);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysY2);\n    var xClipped = x2 < x;\n    var yClipped = y2 < y; // When xClipped or yClipped, the element will be marked as `ignore`.\n    // But we should also place the element at the edge of the coord sys bounding rect.\n    // Beause if data changed and the bar show again, its transition animaiton\n    // will begin at this place.\n\n    layout.x = xClipped && x > coordSysX2 ? x2 : x;\n    layout.y = yClipped && y > coordSysY2 ? y2 : y;\n    layout.width = xClipped ? 0 : x2 - x;\n    layout.height = yClipped ? 0 : y2 - y; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return xClipped || yClipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new Rect({\n      shape: extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\n    var sector = new ShapeClass({\n      shape: defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item'; // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? updateProps : initProps)(sector, {\n        shape: animateTarget // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue\n\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction shouldRealtimeSort(seriesModel, coordSys) {\n  var realtimeSortOption = seriesModel.get('realtimeSort', true);\n  var baseAxis = coordSys.getBaseAxis();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (realtimeSortOption) {\n      if (baseAxis.type !== 'category') {\n        warn('`realtimeSort` will not work because this bar series is not based on a category axis.');\n      }\n\n      if (coordSys.type !== 'cartesian2d') {\n        warn('`realtimeSort` will not work because this bar series is not on cartesian2d.');\n      }\n    }\n  }\n\n  if (realtimeSortOption && baseAxis.type === 'category' && coordSys.type === 'cartesian2d') {\n    return {\n      baseAxis: baseAxis,\n      otherAxis: coordSys.getOtherAxis(baseAxis)\n    };\n  }\n}\n\nfunction updateRealtimeAnimation(realtimeSortCfg, seriesAnimationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  var seriesTarget;\n  var axisTarget;\n\n  if (isHorizontal) {\n    axisTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n    seriesTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n  } else {\n    axisTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n    seriesTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n  }\n\n  if (!isChangeOrder) {\n    // Keep the original growth animation if only axis order changed.\n    // Not start a new animation.\n    (isUpdate ? updateProps : initProps)(el, {\n      shape: seriesTarget\n    }, seriesAnimationModel, newIndex, null);\n  }\n\n  var axisAnimationModel = seriesAnimationModel ? realtimeSortCfg.baseAxis.model : null;\n  (isUpdate ? updateProps : initProps)(el, {\n    shape: axisTarget\n  }, axisAnimationModel, newIndex);\n}\n\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(['itemStyle', 'borderRadius']) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n\n  if (!isPolar) {\n    var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n    var labelStatesModels = getLabelStatesModels(itemModel);\n    setLabelStyle(el, labelStatesModels, {\n      labelFetcher: seriesModel,\n      labelDataIndex: dataIndex,\n      defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n      inheritColor: style.fill,\n      defaultOpacity: style.opacity,\n      defaultOutsidePosition: labelPositionOutside\n    });\n    var label = el.getTextContent();\n    setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n      return getDefaultInterpolatedLabel(data, value);\n    });\n  }\n\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  enableHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n  setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  // Has no border.\n  var borderColor = itemModel.get(['itemStyle', 'borderColor']);\n\n  if (!borderColor || borderColor === 'none') {\n    return 0;\n  }\n\n  var lineWidth = itemModel.get(['itemStyle', 'borderWidth']) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape =\n/** @class */\nfunction () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath =\n/** @class */\nfunction (_super) {\n  __extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  ;\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  };\n\n  return LargePath;\n}(Path);\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.__startPoint = backgroundStartPoint;\n    bgEl.__baseDimIdx = baseDimIdx;\n    bgEl.__largeDataIndices = largeDataIndices;\n    bgEl.__barWidth = barWidth;\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental\n  });\n  el.__startPoint = startPoint;\n  el.__baseDimIdx = baseDimIdx;\n  el.__largeDataIndices = largeDataIndices;\n  el.__barWidth = barWidth;\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var globalStyle = data.getVisual('style');\n  el.useStyle(extend({}, globalStyle)); // Use stroke instead of fill.\n\n  el.style.fill = null;\n  el.style.stroke = globalStyle.fill;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle();\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nexport default BarView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { layout, largeLayout } from '../../layout/barGrid';\nimport dataSample from '../../processor/dataSample';\nimport BarSeries from './BarSeries';\nimport BarView from './BarView';\nexport function install(registers) {\n  registers.registerChartView(BarView);\n  registers.registerSeriesModel(BarSeries);\n  registers.registerLayout(registers.PRIORITY.VISUAL.LAYOUT, zrUtil.curry(layout, 'bar')); // Use higher prority to avoid to be blocked by other overall layout, which do not\n  // only exist in this module, but probably also exist in other modules, like `barPolar`.\n\n  registers.registerLayout(registers.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, largeLayout); // Down sample after filter\n\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, dataSample('bar'));\n  /**\n   * @payload\n   * @property {string} [componentType=series]\n   * @property {number} [dx]\n   * @property {number} [dy]\n   * @property {number} [zoom]\n   * @property {number} [originX]\n   * @property {number} [originY]\n   */\n\n  registers.registerAction({\n    type: 'changeAxisOrder',\n    event: 'changeAxisOrder',\n    update: 'update'\n  }, function (payload, ecModel) {\n    var componentType = payload.componentType || 'series';\n    ecModel.eachComponent({\n      mainType: componentType,\n      query: payload\n    }, function (componentModel) {\n      if (payload.sortInfo) {\n        componentModel.axis.setCategorySortInfo(payload.sortInfo);\n      }\n    });\n  });\n}","\r\nimport * as echarts from 'echarts/core';\r\nimport {\r\n  ToolboxComponent,\r\n  TooltipComponent,\r\n  GridComponent,\r\n  LegendComponent,\r\n} from 'echarts/components';\r\nimport { BarChart, LineChart } from 'echarts/charts';\r\nimport { CanvasRenderer } from 'echarts/renderers';\r\nimport {\r\n  ref, reactive, defineComponent, onMounted, watch,\r\n} from 'vue';\r\n\r\necharts.use([\r\n  ToolboxComponent,\r\n  TooltipComponent,\r\n  GridComponent,\r\n  LegendComponent,\r\n  BarChart,\r\n  LineChart,\r\n  CanvasRenderer,\r\n]);\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    EchartsData: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n  },\r\n  setup(props) {\r\n    const container = ref();\r\n    const chart = ref();\r\n    const option = reactive({\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          type: 'cross',\r\n          crossStyle: {\r\n            color: '#999',\r\n          },\r\n        },\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: { show: true, readOnly: false },\r\n          magicType: { show: true, type: ['line', 'bar'] },\r\n          restore: { show: true },\r\n          saveAsImage: { show: true },\r\n        },\r\n      },\r\n      legend: {\r\n        data: ['学习时长', '完成人数', '平均每日学习时长'],\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: [\r\n            '1月',\r\n            '2月',\r\n            '3月',\r\n            '4月',\r\n            '5月',\r\n            '6月',\r\n            '7月',\r\n            '8月',\r\n            '9月',\r\n            '10月',\r\n            '11月',\r\n            '12月',\r\n          ],\r\n          axisPointer: {\r\n            type: 'shadow',\r\n          },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          name: '累计时长',\r\n          min: 0,\r\n          max: 250,\r\n          interval: 50,\r\n          axisLabel: {\r\n            formatter: '{value} 小时',\r\n          },\r\n        },\r\n        {\r\n          type: 'value',\r\n          name: '完成人数',\r\n          min: 0,\r\n          max: 100,\r\n          interval: 5,\r\n          axisLabel: {\r\n            formatter: '{value} 人',\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: '学习时长',\r\n          type: 'bar',\r\n          data: [\r\n            2.0,\r\n            4.9,\r\n            7.0,\r\n            23.2,\r\n            25.6,\r\n            76.7,\r\n            135.6,\r\n            162.2,\r\n            32.6,\r\n            20.0,\r\n            6.4,\r\n            3.3,\r\n          ],\r\n        },\r\n        {\r\n          name: '完成人数',\r\n          type: 'bar',\r\n          data: [\r\n            2.6,\r\n            5.9,\r\n            9.0,\r\n            26.4,\r\n            28.7,\r\n            70.7,\r\n            175.6,\r\n            182.2,\r\n            48.7,\r\n            18.8,\r\n            6.0,\r\n            2.3,\r\n          ],\r\n        },\r\n        {\r\n          name: '平均每日学习时长',\r\n          type: 'line',\r\n          yAxisIndex: 1,\r\n          data: [\r\n            2.0,\r\n            2.2,\r\n            3.3,\r\n            4.5,\r\n            6.3,\r\n            10.2,\r\n            20.3,\r\n            23.4,\r\n            23.0,\r\n            16.5,\r\n            12.0,\r\n            6.2,\r\n          ],\r\n        },\r\n      ],\r\n    });\r\n    const setChart = () => {\r\n      option.series.forEach((item: any, index) => {\r\n        if (index === 0) {\r\n          item.data = props.EchartsData.data1;\r\n        }\r\n        if (index === 1) {\r\n          item.data = props.EchartsData.data2;\r\n        }\r\n        if (index === 2) {\r\n          item.data = props.EchartsData.data3;\r\n        }\r\n      });\r\n      chart.value = echarts.init(container.value);\r\n      chart.value.setOption(option, true);\r\n    };\r\n    watch(\r\n      () => props.EchartsData,\r\n      (newValue, oldValue) => {\r\n        setChart();\r\n      },\r\n    );\r\n    onMounted(() => {\r\n      setChart();\r\n    });\r\n    return {\r\n      container,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./lineHistogramChart.vue?vue&type=template&id=71dc37be&scoped=true&lang=pug\"\nimport script from \"./lineHistogramChart.vue?vue&type=script&lang=ts\"\nexport * from \"./lineHistogramChart.vue?vue&type=script&lang=ts\"\n\nimport \"./lineHistogramChart.vue?vue&type=style&index=0&id=71dc37be&lang=stylus&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-71dc37be\"\n\nexport default script","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./lineHistogramChart.vue?vue&type=style&index=0&id=71dc37be&lang=stylus&scoped=true\""],"sourceRoot":""}